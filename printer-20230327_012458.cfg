# This file contains pin mappings for the LDO Kit using BigTreeTech Octopus V1 as the main controller.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Octopus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Octopus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_440050000151303530353135-if00
restart_method: command
##--------------------------------------------------------------------


#####################################################################
#  CAN Config
#####################################################################

[include fly-sb2040.cfg]

[mcu SB2040]
canbus_uuid: 29776ad95255

[temperature_sensor SB2040]
sensor_type: temperature_mcu
sensor_mcu: SB2040

[controller_fan SB2040_Fan]
pin: SB2040:gpio15
stepper: extruder

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 10000
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 750
square_corner_velocity: 10

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop #PG6
position_min: 0

##--------------------------------------------------------------------
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 20 #Max 100
homing_retract_dist: 0
#homing_retract_speed: 20
#second_homing_speed: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.0 # 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6 # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 88 # MAX: 105 MIN: 75

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop #PG9
position_min: 0

##--------------------------------------------------------------------
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 20 #Max 100
homing_retract_dist: 0
#homing_retract_speed: 20
#second_homing_speed: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.0 # 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9     # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 97 # MAX: 110 MIN: 90
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop #PG10

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5

##--------------------------------------------------------------------
position_max: 310

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 2
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

[include hardware/extruder-cw2.cfg]
#[include hardware/extruder-m4.cfg]

#####################################################################
# Smart Filament Sensor
#####################################################################
[pause_resume]

[filament_motion_sensor filament_sensor]
detection_length: 6.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: PG12
#pause_on_runout:
runout_gcode: FILAMENT_RUNOUT
#insert_gcode:
#event_delay:
#pause_delay:
#   See the "filament_switch_sensor" section for a description of the
#   above parameters.

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

#####################################################################
#   Bed Heater
#####################################################################


[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  Keenovo branded bed heaters should use Generic 3950
##  LDO branded bed heaters will have the sensor type labelled on the heater
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950 
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.95
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
pin: ^SB2040:LIMIT_1 #PG15
x_offset: 0
y_offset: 0 #25.0
#z_offset: 0
speed: 3.0
lift_speed: 5.0
samples: 5
samples_result: median
sample_retract_dist: 2
samples_tolerance: 0.006
samples_tolerance_retries: 10
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - CNC_FAN0
pin: SB2040:FAN0 #PA8
kick_start_time: 0.5
cycle_time: 0.15
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - CNC_FAN1
pin: SB2040:FAN1 #PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[multi_pin controller_fan_pins]
pins: PD12, PD13

[controller_fan controller_fan]
##  Controller fan - CNC_FAN2
pin=multi_pin:controller_fan_pins
kick_start_time: 0.5
heater: heater_bed
fan_speed: 1
idle_timeout: 300
idle_speed: 0.25
#hardware_pwm: True
#cycle_time: 0.00005  # 25 kHz
max_power: 1

[fan_generic exhaust_fan]
#  Exhaust fan - CNC_FAN3
pin: PD15
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.25
#heater: extruder
#heater_temp: 200
#fan_speed: 0.15

#####################################################################
#   LED Control
#####################################################################

[led caselight]
# Chamber Lighting - HE3
white_pin: PB11
initial_white:0.1
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

[thermistor Trianglelab-NTC100K-B3950]
temperature1: 25
resistance1: 103180
temperature2: 150
resistance2: 1366.2
temperature3: 250
resistance3: 168.6

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: Trianglelab-NTC100K-B3950 #CMFB103F3950FANT
sensor_pin: SB2040:TH1 #PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor RPi]
sensor_type: temperature_host

######################################################################
##                      Input Shaper Settings                       ##
######################################################################

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: SB2040:ADXL #rpi:None

spi_software_sclk_pin: SB2040:gpio0
spi_software_mosi_pin: SB2040:gpio3
spi_software_miso_pin: SB2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points:
        175, 175, 20

[input_shaper]
shaper_freq_x: 47.6 #62.8 #50.4
shaper_type_x: mzv
shaper_freq_y: 34.6 #36.4
shaper_type_y: mzv

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 4200

#[safe_z_home]
#  XY Location of the Z Endstop Switch
#  Update -10,-10 to the XY coordinates of your endstop pin 
#  (such as 157,305) after going through Z Endstop Pin
## Location Definition step.
#home_xy_position: 175,175
#speed:100
#z_hop:10
#z_hop_speed:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------


##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 400
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 20

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5
algorithm: bicubic
relative_reference_index: 12


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3
color_order: RGB



##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        # ALL WHITE
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 TRANSMIT=1

#--------------------------------------------------------------------

[exclude_object]

#####################################################################
#   Macros
#####################################################################
#[include helpers/*]
[include helpers/tones.cfg]
#[include helpers/klicky-probe.cfg]
[include helpers/stealthburner_led_effects_barf.cfg]
[include helpers/stealthburner.cfg]
[include helpers/sensorless.cfg]
[include helpers/variables.cfg]
[include helpers/vibr_calibrate_01.cfg]
[include helpers/vibr_calibrate_02.cfg]
[include scripts/shell_commands.cfg]
[include mainsail.cfg]
[include helpers/print_macros.cfg]
[include helpers/filament.cfg]
[include helpers/Adaptive_Mesh.cfg]
[include helpers/Adaptive_Purge.cfg]
[include helpers/bedfans.cfg]

[gcode_macro G32]
gcode:
    status_homing
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X175 Y175 Z30 F3600



[gcode_macro M300]
gcode:
	{% set S = params.S|default(1000)|int %}
	{% set P = params.P|default(100)|int %}

		SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
		G4 P{P}
		SET_PIN PIN=beeper VALUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.040
#*# pid_ki = 2.018
#*# pid_kd = 431.730
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.091
#*# pid_ki = 2.424
#*# pid_kd = 64.923
#*#
#*# [stepper_z]
#*# position_endstop = -0.965
#*#
#*# [probe]
#*# z_offset = -0.978
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.026875, -0.013125, 0.027500, 0.035000, -0.011875
#*# 	  -0.038125, -0.026250, -0.018125, -0.018125, -0.035625
#*# 	  -0.038750, -0.031875, 0.000000, -0.019375, -0.027500
#*# 	  -0.000000, 0.011875, 0.046875, 0.018750, 0.000625
#*# 	  0.040000, 0.037500, 0.083125, 0.051875, 0.040625
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 61.8
#*# max_x = 284.76
#*# min_y = 50.25
#*# max_y = 303.05
