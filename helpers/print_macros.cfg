[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro CQGL]
gcode:
    {% if printer.quad_gantry_level.applied == False %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28 ; home if not already homed
        {% endif %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}

[gcode_macro PRIMING]
gcode:
    M106 S255                      ;partcooling fan max             .1
    CLEAN                          ;call clean macro                .2
    G1  X315 Y315 F30000           ;move to purge position    X/Y   .3
    G1  Z0.3 F5000                 ;move to purge position    Z     .4
    G91                            ;incremental positioning         .5
    G1  E14 F500                   ;prime hotend                    .6
    G1  Z10 E25 F250               ;purge and move up               .7
    G1  Z10 F5000                  ;move up by 10                   .8
    G1  X-30 Z-20.1 F5000          ;move to wiping start      X/Z   .9
    G1  X-20 Y-20                  ;wipe end                  X/Y   .10
    G1  Z10  F5000                 ;move up                         .11
    M82                            ;extruder absolute               .12
    G92 E0.0                       ;extruder reset                  .13               
    G90                            ;absolute positioning            .14
    M107                           ;partcooling fan off             .15

[gcode_macro CLEAN]
gcode:
    M204 S6000                     ;set acceleration to 6000        .16
    G1 X315 Y285 F30000            ;move to position          X/Y   .17
    G1 Z0.5 F5000                  ;move to position          Z     .18
    G1 Y340 F30000                 ;kik the prime tower off         .19

[gcode_macro PRINT_START_PLA]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    CLEAR_PAUSE
    # Load variables
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(215)|int %}
    {% set GCODE_OFFSET = params.OFFSET|default(0)|float %}
    {% set CASE_LIGHT = params.LIGHTS|default(0.1)|float %}
    

    SET_LED LED=caselight WHITE={CASE_LIGHT} SYNC=0 TRANSMIT=1

    M190 S{BED_TEMP}

    #HEAT_SOAK {% 0 if params.BED_TEMP < 100 else 50 %}
    # Pre-heat extruder to 150
    M104 S180
    status_heating
    # Set GCODE offset
    # SET_GCODE_OFFSET Z=0
    # Home
    M117 Homing
    G32                            ; home all axes
    BED_MESH_CALIBRATE
    CLEAN_NOZZLE
    status_calibrating_z
    CALIBRATE_Z
    G1 Z20 F3000                   ; move nozzle away from bed
    # Reset extruder
    G92 E0
    # Set extruder temperature
    M117 Waiting on nozzle
    M109 S{extruder_temp}
    # Set fan, priming and offset
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.65
    SET_GCODE_OFFSET Z_ADJUST={GCODE_OFFSET} MOVE=1
    CLEAN_NOZZLE
    # Wait for Extruder temperature
    M109 S{extruder_temp}
    M117 Purging
    PRIMING
    # Move Z axis up a little to prevent scratching heat bed
    #G1 Z10.0 F3000
    # Move to start position
    #G1 X0.1 Y20 Z2.0 F5000.0

    # Move to start for purge line
    #G1 X0.1 Y20 Z0.3 F5000.0
    # Draw 1st line
    #G1 X0.1 Y150.0 Z0.3 F1500.0 E15
    # Move to side a little
    #G1 X0.4 Y150.0 Z0.3 F5000.0
    # Draw 2nd line
    #G1 X0.4 Y20 Z0.3 F1500.0 E30
    # Reset extruder
    #G92 E0
    # Move Z up a little
    #G1 Z5.0 F3000
    M117 Printing
    status_printing
   
[gcode_macro PRINT_START_PETG]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    CLEAR_PAUSE
    # Load variables
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(215)|int %}
    {% set CASE_LIGHT = params.LIGHTS|default(0.1)|float %}
    {% set GCODE_OFFSET = params.OFFSET|default(0)|float %}
    

    SET_LED LED=caselight WHITE={CASE_LIGHT} SYNC=0 TRANSMIT=1

    M190 S{BED_TEMP}

    #HEAT_SOAK {% 0 if params.BED_TEMP < 100 else 50 %}
    # Pre-heat extruder to 150
    M104 S{extruder_temp - 60}
    status_heating
    # Set GCODE offset
    # SET_GCODE_OFFSET Z=0
    # Home
    M117 Homing
    G32                            ; home all axes
    BED_MESH_CALIBRATE
    M104 S{extruder_temp}
    CLEAN_NOZZLE
    status_calibrating_z
    CALIBRATE_Z
    G1 Z20 F3000                   ; move nozzle away from bed
    # Reset extruder
    G92 E0
    # Set extruder temperature
    M117 Waiting on nozzle
    M109 S{extruder_temp}
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.65
    SET_GCODE_OFFSET Z_ADJUST={GCODE_OFFSET} MOVE=1
    # Nozzle brushy
    CLEAN_NOZZLE
    # Move Z axis up a little to prevent scratching heat bed
    G1 Z2.0 F3000
    # Wait for Extruder temperature
    M109 S{extruder_temp}
    M117 Purging
    # Move to start for purge line
    ADAPTIVE_PURGE
    M117 Printing
    status_printing


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    CLEAR_PAUSE
    SET_LED_EFFECT EFFECT=sb_logo_standby REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_nozzle_standby REPLACE=1 FADETIME=1.0
    status_ready
    # Load variables
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(215)|int %}

    # Heatsoak time of the bed in minutes and chamber temperature wanted
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES2"].print_default_soak)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printer["gcode_macro _USER_VARIABLES2"].print_default_chamber_temp)|int %}
    {% set CHAMBER_MAXTIME = params.CHAMBER_MAXTIME|default(printer["gcode_macro _USER_VARIABLES2"].print_default_chamber_max_heating_time)|int %}

    # Extras
    {% set GCODE_OFFSET = params.OFFSET|default(0)|float %}
    {% set CASE_LIGHT = params.LIGHTS|default(0.1)|float %}
    {% set EXHAUST_FAN = params.EXHAUST|default(0.1)|float %}
    

    SET_LED LED=caselight WHITE={CASE_LIGHT} SYNC=0 TRANSMIT=1

    # 2 ----- BED HEATSOAK -------------------------------------
    # Heatsoak the bed if SOAK time is set and bed is not already warming up to the correct temperature (+-8Â°C).
    # We make the assumption that the soak is not needed if the bed is already at the correct target.
    # We also use the recirculating filter under the bed (if available) at full power to spread the heat
    # during the heatsoak if a specific temperature need to be reached.
    {% if status_leds_enabled %}
            SET_LED_EFFECT EFFECT=sb_logo_heating REPLACE=1 FADETIME=1.0
            SET_LED_EFFECT EFFECT=sb_nozzle_standby REPLACE=1 FADETIME=1.0
    {% endif %}

    {% if (SOAK > 0) and (printer.heater_bed.target < (BED_TEMP - 8)) %}
        # If the machine is equiped by a chamber temperature sensor and a recirculating filter (check is automatic under the hood),
        # then we look if a specific chamber temperature is needed and we power on the recirculating filter to spread the heat
        {% if (CHAMBER_TEMP > 0) and filter_enabled %}
            START_FILTER SPEED=1
        {% endif %}
        # Put the bed temperature target and wait for the soak
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME={SOAK}
    {% else %}  
        # If the machine is equiped by a chamber temperature sensor and a recirculating filter (check is automatic under the hood),
        # then we look if a specific chamber temperature is needed and we power on the recirculating filter to spread the heat
        {% if (CHAMBER_TEMP > 0) and filter_enabled %}
            START_FILTER SPEED=1
        {% endif %}
        # Only heat the bed to the target and continue
        HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME=0
    {% endif %}


    # 3 ----- CHAMBER HEATSOAK ----------------------------------
    # If a setpoint is defined and a sensor available, then we wait to reach the chamber temperature (with a timeout in case it's winter...)
    # We heat up the extruder a little bit to speed up the process by using the hotend fan. If there is one, the recirculating filter
    # is also be powered on from the previous step and kept like that to act as bed fans
    {% if chamber_sensor_enabled %}
        {% if CHAMBER_TEMP > 0 %}
            M109 S{EXTRUDER_TEMP - 50}
            # Wait for the temperature of the chamber to be reached (default max: 15min)
            HEATSOAK_CHAMBER TEMP={CHAMBER_TEMP} MAXTIME={CHAMBER_MAXTIME}
        {% endif %}
    {% endif %}
    SET_LED_EFFECT EFFECT=sb_logo_standby REPLACE=1 FADETIME=1.0
    
    # Home
    M104 S150
    SET_LED_EFFECT EFFECT=sb_nozzle_heating REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_logo_heating REPLACE=1 FADETIME=1.0

    M117 Homing
    SET_LED_EFFECT EFFECT=sb_logo_homing REPLACE=1 FADETIME=1.0
    G32                            ; home all axes

    SET_LED_EFFECT EFFECT=sb_logo_meshing REPLACE=1 FADETIME=1.0
    M117 Performing bed mesh
    BED_MESH_CALIBRATE

    M117 Heating nozzle for cleaning...

    SET_LED_EFFECT EFFECT=sb_nozzle_heating REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_logo_heating REPLACE=1 FADETIME=1.0
    M109 S220

    M117 Cleaning nozzle...
    SET_LED_EFFECT EFFECT=sb_logo_cleaning REPLACE=1 FADETIME=1.0
    CLEAN_NOZZLE

    SET_LED_EFFECT EFFECT=sb_nozzle_cooling REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_logo_cooling REPLACE=1 FADETIME=1.0
    G92 E0
    G1 E-2 F1500
    G1 Z20 F3000                   ; move nozzle away from bed

    # Reset extruder
    G92 E0

    # Set extruder temperature
    M117 Waiting on nozzle
    SET_LED_EFFECT EFFECT=sb_nozzle_heating REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_logo_heating REPLACE=1 FADETIME=1.0
    M109 S{extruder_temp}

    # Set fan, priming and offset
    SET_FAN_SPEED FAN=exhaust_fan SPEED={EXHAUST_FAN}
    SET_GCODE_OFFSET Z_ADJUST={GCODE_OFFSET} MOVE=1

    # Wait for Extruder temperature
    M117 Purging
    SET_LED_EFFECT EFFECT=sb_logo_cleaning REPLACE=1 FADETIME=1.0
    ADAPTIVE_PURGE
    # Reset extruder
    G92 E0
    # Move Z up a little
    G1 Z5.0 F3000
    
    M117 Printing
    SET_LED_EFFECT EFFECT=sb_logo_printing REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=set_nozzle_leds REPLACE=1 FADETIME=1.0
    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

    M107
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
 

   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    M83
    G1 E-15 F1200
    G1 E10 F600
    G1 E-15 F1200
    G1 E10 F600
    G1 E-15 F1200
    G1 E-15 F6000                  ; retract filament
                   
    
    TURN_OFF_HEATERS
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//4} Y{th.axis_maximum.y - 50} F3600  ; park nozzle at rear

    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.15
    status_off
    SET_LED_EFFECT EFFECT=sb_nozzle_part_ready REPLACE=1 FADETIME=1.0
    SET_LED_EFFECT EFFECT=sb_logo_part_ready REPLACE=1 FADETIME=1.0
    SONG_ALL_STAR
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M117 Complete

[gcode_macro _M600_OLD]

gcode:
   {% set x = params.X|default(50)|int %}
   {% set y = params.X|default(0)|int %}
   {% set z = params.X|default(10)|int %}
   SAVE_GCODE_STATE NAME=_state
   PAUSE
   G91
   G1 E-.8 F2700
   G1 Z{z}
   G90
   G1 X{x} Y{y} F3000
   G91
   G1 E-50 F1000
   RESTORE_GCODE_STATE NAME=_state

# Turn printer off

[gcode_macro POWER_OFF_PRINTER]
gcode:
   {action_call_remote_method("set_device_power", device="printer", state="off")}

[gcode_macro LOAD_FILAMENT]
gcode:

    {% set EXTRUDER_TEMP = params.EXTRUDER|default(230)|int %}

   M104 S{EXTRUDER_TEMP}
   G90
   G0 Z15
   G0 X175 Y50 Z25
   M109 S{EXTRUDER_TEMP}
   M83                            ; set extruder to relative
   G1 E25 F1800                  ; quickly load filament to down bowden
   G1 E25 F300                    ; slower extrusion for hotend path
   G1 E45 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:

   {% set EXTRUDER_TEMP = params.EXTRUDER|default(230)|int %}

   M104 S{EXTRUDER_TEMP}
   G90
   G0 Z15
   G0 X175 Y50 Z25
   M109 S{EXTRUDER_TEMP}

   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-50 F1800                 ; retract filament completely
   G1 E-25 F1800
   M82                            ; set extruder to absolute

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 270
variable_start_y: 354
variable_start_z: 0.1
variable_wipe_dist: 20
variable_wipe_qty: 3
variable_wipe_spd: 300
variable_raise_distance: 24.8

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro _SET_FAN_SPEED]
gcode:
    M106 S{ (params.PERCENT | float) * 255 / 100 }


[gcode_macro CENTER]
gcode:
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F7200

#################################################################################
##                  Variables for heatsoak macro                               ##
#################################################################################

variable_print_default_bed_temp: 95
variable_print_default_extruder_temp: 240
variable_print_default_chamber_temp: 45
variable_print_default_chamber_max_heating_time: 60
variable_print_default_soak: 8
variable_print_default_material: "ABS"


[gcode_macro HEATSOAK_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
gcode:
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES2"].chamber_temperature_sensor_enabled %}

    {% if chamber_sensor_enabled %}
        {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
        {% set MAXTIME = params.MAXTIME|default(printer["gcode_macro _USER_VARIABLES2"].print_default_chamber_max_heating_time)|int %}

        {% set verbose = printer["gcode_macro _USER_VARIABLES2"].verbose %}

        {% for _ in range(1, MAXTIME) %}
            _WAIT_CHAMBER_TEMP TEMP={SETPOINT_TEMP}
        {% endfor %}
        {% if verbose %}
            RESPOND MSG="Chamber temperature OK !"
        {% endif %}
    {% endif %}


[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES2"].chamber_temperature_sensor_enabled %}

    {% if chamber_sensor_enabled %}
        {% set chamber_sensor_name = printer["gcode_macro _USER_VARIABLES2"].chamber_temperature_sensor_name %}
        {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
        {% set CURRENT_TEMP = printer["temperature_sensor " ~ chamber_sensor_name].temperature|float %}

        {% if CURRENT_TEMP <= SETPOINT_TEMP %}
            RESPOND MSG="Heating up the chamber : {CURRENT_TEMP}/{SETPOINT_TEMP}"
            G4 P{60000 * 1} # wait a minute and check again if called in a loop
        {% endif %}
    {% endif %}


[gcode_macro HEATSOAK_BED]
description: Heatsoak bed at specified temperature and wait for a specific amount of time
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|int %}
    {% set TIME = params.SOAKTIME|default(8)|int %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES2"].verbose %}

    {% if verbose %}
        RESPOND MSG="Heating up bed..."
    {% endif %}

    M190 S{SETPOINT_TEMP}

    {% if TIME > 0 %}
        {% for _ in range(1, TIME) %}
            RESPOND MSG="Heatsoak..."
            G4 P{60000 * 1}
        {% endfor %}
    {% else %}
        RESPOND MSG="No heatsoak needed, continue"
    {% endif %}
    
    {% if verbose %}
        RESPOND MSG="Bed temperature OK"
    {% endif %}